/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.3/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    id 'java'
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'org.springframework.boot' version '3.1.4'
    id 'io.spring.dependency-management' version '1.1.3'
    id "org.flywaydb.flyway" version "9.22.1"
    id "org.openapi.generator" version "6.6.0"
    id "io.freefair.lombok" version "8.3"
}

apply plugin: 'io.spring.dependency-management'
apply plugin: 'java'



repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    testImplementation('org.junit.jupiter:junit-jupiter:5.4.0')
    // This dependency is used by the application.
    implementation 'org.postgresql:postgresql'
    implementation 'org.springframework.boot:spring-boot-starter-web:3.1.3'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.1.3'
    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.1.3'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'   
    // https://mvnrepository.com/artifact/com.h2database/h2
    testImplementation 'com.h2database:h2:2.2.222'

    implementation 'org.hibernate.validator:hibernate-validator:8.0.1.Final'
    implementation 'javax.validation:validation-api:2.0.0.Final'
    implementation  'org.flywaydb:flyway-core'
    // https://mvnrepository.com/artifact/com.jayway.jsonpath/json-path
implementation 'com.jayway.jsonpath:json-path:2.8.0'
// https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
implementation 'org.apache.commons:commons-lang3:3.13.0'


}

test {
	useJUnitPlatform()
	testLogging {
		events "passed", "skipped", "failed"
	}
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'practicetask.App'
}

openApiGenerate {
    generatorName.set("spring")
    inputSpec.set("$rootDir/OpenAPI/openApi.json")
    outputDir.set("$rootDir/app/")
    apiPackage.set("com.provider.controller")
    modelPackage.set("com.provider.model")
    configOptions = [
            useSpringBoot3         : "true",
            useTags                : "true",
            library                : "spring-cloud",
            skipDefaultInterface   : "true",
            swaggerDocketConfig    : "false",
            unhandledException     : "true",
            booleanGetterPrefix    : "is",
            hideGenerationTimestamp: "true",
            interfaceOnly          : "true",
            dateLibrary            : "java8",
            useBeanValidation      : "true",
            performBeanValidation  : "true",
            openApiNullable        : "false",
            documentationProvider  : "none",
            annotationLibrary      : "none"]

}


tasks.openApiGenerate {
    doLast {
        delete(
                "$rootDir/app/.openapi-generator",
                "$rootDir/app/pom.xml",
                "$rootDir/app/README.md",
        )
    }
}